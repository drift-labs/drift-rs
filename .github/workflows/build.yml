name: Build

on:
  push:
    branches:
      - master
      - main
    paths:
      - "**.rs"
      - "**.toml"
      - "**.lock"
      - ".github/workflows/*.yml"
  pull_request:
    branches:
      - master
      - main
    paths:
      - "**.rs"
      - "**.toml"
      - "**.lock"
      - ".github/workflows/*.yml"
    
env:
 CI_NIGHTLY_TOOLCHAIN: "nightly-x86_64-unknown-linux-gnu"

jobs:
  format-build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v2
      - name: Install ffi toolchain (1.76.0)
        run: rustup install 1.76.0-x86_64-unknown-linux-gnu
      - name: install libdrift_ffi_sys
        run: |
          mkdir local_libs && cd local_libs
          curl -L "https://github.com/user-attachments/files/17124868/libdrift_ffi_sys.so.zip" > ffi.zip
          unzip ffi.zip
      - name: Install rust nightly
        run: |
          rustup install nightly
          rustup component add rustc-codegen-cranelift-preview --toolchain $CI_NIGHTLY_TOOLCHAIN
          rustup component add rustfmt --toolchain $CI_NIGHTLY_TOOLCHAIN
      - name: Format
        run: cargo fmt --all -- --check
      - name: Build
        run: rustup run $CI_NIGHTLY_TOOLCHAIN cargo check
        env:
          RUSTFLAGS: "-Zcodegen-backend=cranelift -Lnative=$PWD/local_libs -ldylib=libdrift_ffi_sys"
      - name: Clippy
        uses: giraffate/clippy-action@v1
        with:
         reporter: 'github-pr-review'
         github_token: ${{ secrets.GITHUB_TOKEN }}       
      - name: Test
        env:
          TEST_PRIVATE_KEY: ${{ secrets.TEST_PRIVATE_KEY }}
          RUSTFLAGS: "-Zcodegen-backend=cranelift -Lnative=$PWD/local_libs -ldylib=libdrift_ffi_sys"
        run: rustup run $CI_NIGHTLY_TOOLCHAIN cargo test --all
